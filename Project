'''
Tsimtxuj Her, Drew Harinen, Andres Sanchez.
CIS PROJEKT
'''
#CIS PROJECT --> Tsimtxuj Her, Drew Harinen, Andres Sanchez

# What's the actual thing this vending machine needs to do?
# NEED FIXING ASAP

print(f"Hello earthling! This what we have in our vending machine today:



def vend_intro():
# the individual dictionaries
	products = 
		{"A1": "Swedish Fish",
		"A2": "Apple", 
		"A3": "Poprocks", 
		"A4": "Beef Jerky", 
		"A5": "Cheetos"}
	prices = {"A1": "2 sheckles", 
		  "A2": "1 sheckles", 
		  "A3": "3 sheckles", 
		  "A4": "4 sheckles", 
		  "A5": "10 sheckles"}
	inventory = 
		{"A1": 5, 
		 "A2": 5, 
		 "A3": 5, 
		 "A4": 5, 
		 "A5": 5}
	
	# Combine the dictionaries into one
	combined_dict = {}

for key in products:
    combined_dict[key] = {'product': products[key], 'price': prices[key], 'inventory': inventory[key]}
print(combined_dict) 

# WE USE THIS CLASS BELOW!
class VendingMachine:
	def __init__(self, _code, _sheckles=0):
		self.code=_code
		self.sheckles=_sheckles
	
	def get_code(self):
		return self.code
	
	def get_sheckles(self):
		return self.sheckles

	def sheckle_depletion(self, amount):
		self.sheckles-=amount
		return self.sheckles
	
	def display_sheckles(self):
		# This should be called after user inputs amount of sheckles
		print(f"You're balance is {self.get_sheckles()}")
	
	def sheckle_add(self, amount):
		# don't worry bout this one... maybe
		self.sheckles+=amount
		return self.sheckles

	def sheckles_zero(self):
		# This should be called after user buys an item
		if self.sheckles<=0:
			print("You are out of sheckles, go away.")
		else:	
			print(f"You have {self.get_sheckles()} sheckles left. Would you like to buy more?")
	
	def sheckle_change(self, amount):
		pass

def The_real_stuff():
	vending_code_input={"A1":"Swedish Fish","A2":"Cheese","A3":"Poprocks","A4":"Jerky","A5":"Doritos"}
	while True:	
		print("\nPlease input A1, A2, A3, A4, A5 into the vending machine")
		print("\nPlease input amount of sheckles")
		code_input=input("Enter code: ")
		break
	
	
if __name__=="__main__":
	The_real_stuff()

